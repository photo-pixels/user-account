syntax = "proto3";

package user_account;

option go_package = "github.com/photo-pixels/user-account/api";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service AuthService {
  rpc EmailAvailable(EmailAvailableRequest)  returns (EmailAvailableResponse) {
    option (google.api.http) = {
      get: "/v1/auth/email-available";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Проверка доступен ли email для регистрации";
    };
  };
  rpc SendInvite(SendInviteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/auth/invite";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Отправка приглашения зарегистрироваться";
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      };
    };
  };
  rpc ActivateInvite(ActivateInviteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/auth/invite/activate";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Активация инвайта регистрации";
    };
  };
  rpc Registration(RegistrationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/auth/registration";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Регистрация нового пользователя";
    };
  }
  rpc ActivateRegistration(ActivateRegistrationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/auth/registration/activate";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Активация зарегистрированного пользователя";
    };
  }
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/auth/logout";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Разлогинить пользователя по refresh токену";
    };
  }
  rpc Login(LoginRequest) returns (AuthData) {
    option (google.api.http) = {
      post: "/v1/auth/login";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Аутентификация пользователя";
    };
  }
  rpc RefreshToken(RefreshTokenRequest) returns (AuthData) {
    option (google.api.http) = {
      post: "/v1/auth/refresh";
      body: "*";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Обновление аутентификации по refresh токену";
    };
  }
}

message EmailAvailableRequest {
  string email = 1;
}

message EmailAvailableResponse {
  bool available = 1;
}

message SendInviteRequest {
    string email = 1;
}

message ActivateInviteRequest {
  string firstname = 1;
  string surname = 2;
  optional string patronymic = 3;
  string code_confirm = 4;
  string password = 5;
}

message RegistrationRequest {
  string firstname = 1;
  string surname = 2;
  optional string patronymic = 3;
  string password = 4;
  string email = 5;
}

message ActivateRegistrationRequest {
  string code_confirm = 4;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LogoutRequest {
  string refresh_token = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message AuthData {
  string user_id = 1;
  string access_token = 3;
  google.protobuf.Timestamp access_token_expiration = 4;
  string refresh_token = 5;
  google.protobuf.Timestamp refresh_token_expiration = 6;
}

enum AuthStatus {
  AUTH_STATUS_UNKNOWN = 0;
  // Был отправлен инвайт на вступление
  AUTH_STATUS_SENT_INVITE = 1;
  // Не активен
  AUTH_STATUS_NOT_ACTIVATED = 2;
  // Активен
  AUTH_STATUS_ACTIVATED = 3;
  // Заблокирован
  AUTH_STATUS_BLOCKED = 4;
}